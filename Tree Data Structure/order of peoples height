vector<int> Solution::order(vector<int> &A, vector<int> &B) {
    vector<pair<int,int>> v;
    int n = A.size();
    for (int i=0; i<n; i++){
        v.push_back(make_pair(A[i],B[i]));
    }
    sort(v.begin(),v.end());
    reverse(v.begin(),v.end());
    vector<int> res;
    for (int i=0; i<n; i++){
        if(i==v[i].second)
        {
            res.push_back(v[i].first);
        }
        else if(i<v[i].second)
        {
            return {};
        }
        else
        {
            int k = v[i].second;
            res.insert(res.begin()+k,v[i].first);
        }
    }
    return res;
}

/*Input : 
Heights: 5 3 2 6 1 4   //6,0  5,0  4,2  3,1  2,2  1,3
when i=0 res[0]=6
when i=1  k=0 res[0]=5
when i=2  res[2]=4
when i=3 k=1  res[1]=3
when i=4 k=2  res[2]=2
when i=5 k=3  res[3]=1
InFronts: 0 1 2 0 3 2

Output : 
actual order is: 5 3 2 1 6 4 */
