/*Input 1:
    A = "myinterviewtrainer",
    B = ["trainer", "my", "interview"]

Output 1:
    1
    s   trainer
        my
        interview
    dp  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,]
    1  0 (0,1)(my)
    2  1 0  (1,1)(y) (0,2)(myi)
    3  2 1 0  (2,1)(1,2)(yi)(0,3)(myin)
    4  3 2 1 0  (3,1)(2,2)(i)(1,3)(yin)(0,4)(myint)
    
*/
int Solution::wordBreak(string a, vector<string> &b) {
    if(b.empty()) return 0;
    unordered_set<string> s;
    for(string str : b) s.insert(str);
    vector<bool> dp(a.size()+1,0);//dp[i] is true if a valid sequence ends there.
    dp[0] = 1;
    for(int i=1; i<=a.size(); i++)
    {
        for(int j=i-1; j>=0; j--)
        {
            if(dp[j])
            {
                if(s.find(a.substr(j,i-j)) != s.end())
                {
                    dp[i] = 1;
                    break;
                }
            }
        }
    }
    return dp[a.size()];
}
